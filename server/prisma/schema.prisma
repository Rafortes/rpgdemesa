// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      String      @id @default(uuid())
  email   String   @unique
  name    String
  user    String
  password   String 
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  characters Character[] @relation("user")

  @@map("users")
}

model Spell {
  id String @id @default(uuid())
  name String
  typeSpell String
  level String
  typeAction String
  range String
  conjuration String
  time Int?
  material String?
  description String?
  carSpell CharSpell[] @relation("spell")

  @@map("spells")
}

model Equipment {
  id String @id @default(uuid())
  name String
  price Decimal?
  ca Int?
  stealth String?
  damage String?
  type String?
  properties String?
  charEquip CharEquip[] @relation("equipment")

  @@map("equipment")
}

model Race {
  id String @id @default(uuid())
  name String
  abilityScore String?
  Proficiency String?
  characters Character[] @relation("race")
  subRace SubRace[] @relation("subRace")

  @@map("races")
}

model SubRace {
  id String @id @default(uuid())
  name String
  abilityScore String?
  Proficiency String?

  race Race @relation("subRace", fields: [raceId], references: [id])
  raceId String
  @@map("subRaces")
}

model Class {
  id String @id @default(uuid())
  name String
  hitPoint String
  armor String
  weapons String
  tools String
  savingThrows String
  characters Character[] @relation("class")

  @@map("classes")
}

model Character {
  id String @id @default(uuid())
  name String
  level Int
  experience Int?
  age Int?
  height Int?
  weight Int?
  skin String?
  eye String?
  hair String?
  appearance String?
  backstory String?
  background String?
  alignment String?
  ideals String?
  links String?
  weaknesses String?
  Gold Int?
  charSpell CharSpell[] @relation("character")
  charEquip CharEquip[] @relation("character")

  user User @relation("user", fields: [userId], references: [id])
  userId String
  race Race @relation("race", fields: [raceId], references: [id])
  raceId String
  class Class @relation("class", fields: [classId], references: [id])
  classId String

  @@map("characters")
}

model CharSpell {
  character Character @relation("character", fields: [charId], references: [id])
  charId String 
  spell Spell @relation("spell", fields: [spellId], references: [id])
  spellId String

  @@id([charId,spellId])
  @@map("charSpells")
}

model CharEquip {
  character Character @relation("character", fields: [charId], references: [id])
  charId String
  equipment Equipment @relation("equipment", fields: [equipId], references: [id])
  equipId String

  @@id([charId,equipId])
  @@map("charEquip")
}